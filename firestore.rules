rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      // A user can read/write their own doc (but cannot set themselves as paid)
      allow read: if request.auth != null && request.auth.uid == userId;
      
      allow update: if request.auth != null 
                    && request.auth.uid == userId
                    && !(request.resource.data.paid == true); // block self-approving

      // Admins can create/update any user, including assigning paid plans
      allow create, update, delete: if request.auth != null 
                                    && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Admins collection (list of admin UIDs)
    match /admins/{adminId} {
      allow read: if request.auth != null && request.auth.uid == adminId;
      allow write: if request.auth != null 
                   && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Plans collection (if used)
    match /plans/{planId} {
      allow read: if true; // anyone can view plan info
      allow write: if request.auth != null 
                   && exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    // Default deny everything else
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
